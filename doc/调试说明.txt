2016.10.   利用串口DMA（固定字接收）+Uart空闲中断方式直线一次接收多个数据而减少占用CPU中断
2016.10.16 修改完善了DMA接收数据采用realloc方式动态分配内存，串口DMA能一次接收大概900字节
           这里需要修改堆空间（heap）达到0x400（修改link-config-edit-stack/heap sizes）


2017.01.12 调试版本
1、增加了RTC(容易出现死机，这里PCB布线很重要，建议用12.5PF(精度比6pf的晶振差一些)的32.768k晶振+18Pf电容)
2、将USART1取消的DMA中断模式，改为接收中断接收，发送为polling模式。
3、将堆栈调整为 栈stack =0x800(2k,局部变量) 堆heep =0x800(2k，realloc等)	

2017.01.13 调试版本
1、添加了usmart串口直接执行子程序的功能

2017.01.20 调试版本
1、修改了Usart_Scanf(UART_HandleTypeDef *huart,uint8_t **buffer)的buffer为双重指针，以动态分配内存

2017.01.23 调试版本
1、修改了hal_display中的DisplayLightAdjust函数范围为0-15
2、增加了smart_uart.c 可以实现通过串口输入函数来调用执行函数。

2017.03.16 丰富修改了rtc.c，并产生秒中断

-----------新版PCB-----------
--PCB未解决问题 
1、支持WIFI烧录  2、左声道电平要在0.9v，否则不能选择左声道播放
--程序修改记录
2、显示屏乱码问题，驱动IC电平为5V，STM32F0的IO口电平为3.3V会造成读RAM出现乱码。建议驱动IC供电为3.3v,因此整个电压应采用开关电源

2017.05.02 补充了显示函数 支持屏倒置


2017.12.03 
问题：串口发送没问题，但接收只能收到第一个数
原因：HAL_Init()中定义了SYSTICK的时钟HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000U);
而用的delay_init()分频后时钟会出现错误，即配置SYSTICK冲突。
结论：直接操作SysTick->LOAD 等时钟会导致程序不稳定（修改后再改回来发现有串口又没问题了！不解！！后来直接注释掉HAL_Init()程序运行正常，即去掉了SYSTICK中断功能），最好用提供的HAL_Delay函数

